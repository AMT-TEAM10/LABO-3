openapi: '3.0.3'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
servers:
  - url: 'http://localhost:9090/api'
tags:
  - name: menus
    description: Gestion des menus
  - name: dishes
    description: Gestion des plats
  - name: chefs
    description: Gestion des chefs

paths:
  /menus:
    get:
      tags:
        - menus
      summary: Obtient une liste de tous les menus
      operationId: getMenus
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuWithRelationsDTO'
    post:
      tags:
        - menus
      summary: Ajoute un nouveau menu
      operationId: createMenu
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/MenuDTO'
      responses:
        '201':
          description: Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MenuWithRelationsDTO'
        '400':
          description: Bad Request

  /menus/{id}:
    parameters:
      - name: id
        in: path
        description: numéro du menu à supprimer
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - menus
      summary: Obtient un menu
      operationId: getMenu
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MenuWithRelationsDTO'
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - menus
      summary: Met à jour un menu
      operationId: updateMenu
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/MenuDTO'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MenuDTO'
        '400':
          description: Bad Request
        '404':
          description: Not Found
    delete:
      tags:
        - menus
      summary: Supprime un menu
      operationId: deleteMenu
      responses:
        '204':
          description: OK
        '404':
          description: Not Found
  /menus/{id}/{dishType}:
    parameters:
      - name: id
        in: path
        description: numéro du menu
        required: true
        schema:
          type: integer
          format: int32
      - name: dishType
        in: path
        description: type de plat
        required: true
        schema:
          $ref: '#/components/schemas/DishType'
    get:
      tags:
        - menus
      summary: Obtient le plat du type demandé
      operationId: getDishByType
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DishWithRelationsDTO'
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - menus
      summary: Ajoute ou met à jour le plat du type demandé dans le menu
      operationId: putStarter
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DishDTO'
      responses:
        '201':
          description: plat d'entrée crée
        '204':
          description: plat d'entrée mis à jour
    delete:
      tags:
        - menus
      summary: Supprime le plat du type demandé du menu
      operationId: deleteStarter
      responses:
        '204':
          description: OK
        '404':
          description: Not Found

  /chefs:
    get:
      tags:
        - chefs
      summary: Obtient une liste de tous les chefs
      operationId: getChefs
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChefWithRelationsDTO'
    post:
      tags:
        - chefs
      summary: Ajoute un nouveau chef
      operationId: createChef
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ChefDTO'
      responses:
        '201':
          description: Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ChefDTO'
        '400':
          description: Bad Request
  /chefs/{id}:
    parameters:
      - name: id
        in: path
        description: numéro du chef à obtenir
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - chefs
      summary: Obtient un chef
      operationId: getChef
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ChefWithRelationsDTO'
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - chefs
      summary: Met à jour un chef
      operationId: updateChef
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ChefDTO'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ChefDTO'
        '400':
          description: Bad Request
        '404':
          description: Not Found
    delete:
      tags:
        - chefs
      summary: Supprime un chef
      operationId: deleteChef
      responses:
        '204':
          description: OK
        '404':
          description: Not Found
  /chefs/{id}/dishes:
    parameters:
      - name: id
        in: path
        description: numéro du chef
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - chefs
      summary: Obtient les plats d'un chef
      operationId: getChefDishes
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DishWithRelationsDTO'
        '404':
          description: Not Found
      deprecated: false

  /dishes:
    get:
      tags:
        - dishes
      summary: Obtient une liste de tous les plats
      operationId: getDishes
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DishWithRelationsDTO'
    post:
      tags:
        - dishes
      summary: Ajoute un nouveau plat
      operationId: createDish
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DishDTO'
      responses:
        '201':
          description: plat créé
          headers:
            Location:
              description: URL du plat créé
              schema:
                type: string
                format: uri
  /dishes/{id}:
    parameters:
      - name: id
        in: path
        description: numéro du plat à obtenir
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - dishes
      summary: Obtient un plat
      operationId: getDish
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DishWithRelationsDTO'
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - dishes
      summary: Met à jour un plat
      operationId: updateDish
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DishDTO'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DishDTO'
        '400':
          description: Bad Request
        '404':
          description: Not Found
    delete:
      tags:
        - dishes
      summary: Supprime un plat
      operationId: deleteDish
      responses:
        '204':
          description: OK
        '404':
          description: Not Found

  /dishes/{id}/chefs:
    parameters:
      - name: id
        in: path
        description: numéro du plat
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - dishes
      summary: Obtient la liste des chefs qui ont préparé ce plat
      operationId: getChefsByDish
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChefDTO'
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - dishes
      summary: Ajoute ou met à jour un chef qui a préparé ce plat
      operationId: putChefByDish
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ChefDTO'
      responses:
        '201':
          description: chef créé
          headers:
            Location:
              description: URL du chef créé
              schema:
                type: string
                format: uri
        '204':
          description: chef mis à jour
    delete:
      tags:
        - dishes
      summary: Supprime un chef qui a préparé ce plat
      operationId: deleteChefByDish
      responses:
        '204':
          description: OK
        '404':
          description: Not Found

components:
  schemas:
    DishType:
      title: DishType
      description: Type de plat
      type: string
      enum:
        - starter
        - main
        - dessert
    DishDTO:
      title: DishDTO
      description: toutes les informations d'un plat
      type: object
      properties:
        id:
          description: numéro auto-incrémenté du plat
          type: integer
          format: int32
        name:
          description: nom du plat
          type: string
    MenuDTO:
      title: MenuDTO
      description: toutes les caractéristiques d'un menu
      type: object
      properties:
        id:
          description: numéro auto-incrémenté du menu
          type: integer
          format: int32
          readOnly: true
        name:
          description: nom du menu
          type: string
    ChefDTO:
      title: ChefDTO
      description: toutes les caractéristiques d'un chef
      type: object
      properties:
        id:
          description: numéro auto-incrémenté du chef
          type: integer
          format: int32
        name:
          description: nom du chef
          type: string
    DishWithRelationsDTO:
      title: DishDTO with relations
      description: toutes les informations d'un plat avec les chefs qui le préparent
      allOf:
        - $ref: '#/components/schemas/DishDTO'
        - type: object
          properties:
            chefs:
              description: liste des chefs qui ont préparé ce plat
              type: array
              items:
                $ref: '#/components/schemas/ChefDTO'
    MenuWithRelationsDTO:
      title: MenuDTO with relations
      description: toutes les caractéristiques d'un menu avec les plats qui le composent
      allOf:
        - $ref: '#/components/schemas/MenuDTO'
        - type: object
          properties:
            starter:
              $ref: '#/components/schemas/DishWithRelationsDTO'
            main:
              $ref: '#/components/schemas/DishWithRelationsDTO'
            dessert:
              $ref: '#/components/schemas/DishWithRelationsDTO'
    ChefWithRelationsDTO:
      title: ChefDTO with relations
      description: toutes les caractéristiques d'un chef avec les plats qu'il prépare
      allOf:
        - $ref: '#/components/schemas/ChefDTO'
        - type: object
      properties:
        dishes:
          description: liste des plats préparés par ce chef
          type: array
          items:
            $ref: '#/components/schemas/DishDTO'
