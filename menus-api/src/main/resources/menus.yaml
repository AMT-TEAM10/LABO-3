openapi: '3.0.3'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
servers:
  - url: 'http://localhost:9090/api'
tags:
  - name: menus
    description: Gestion des menus
  - name: dishes
    description: Gestion des plats
  - name: chefs
    description: Gestion des chefs

paths:
  /menus:
    get:
      tags:
        - menus
      summary: Obtient une liste de tous les menus
      operationId: getMenus
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuWithRelations'
        '404':
          description: Not Found
    post:
      tags:
        - menus
      summary: Ajoute un nouveau menu
      operationId: putMenu
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/MenuDTO'
      responses:
        '201':
          description: Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MenuWithRelations'
        '400':
          description: Bad Request

  /menus/{id}:
    get:
      tags:
        - menus
      summary: Obtient un menu
      operationId: getMenu
      parameters:
        - name: id
          in: path
          description: numéro du menu à obtenir
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MenuDTO'
        '404':
          description: Not Found
      deprecated: false
    put:
        tags:
            - menus
        summary: Met à jour un menu
        operationId: updateMenu
        parameters:
            - name: id
              in: path
              description: numéro de la menu à mettre à jour
              required: true
              schema:
                  type: integer
                  format: int32
        requestBody:
          $ref: '#/components/requestBodies/MenuDTO'
        responses:
            '200':
              description: OK
              content:
                'application/json':
                  schema:
                    $ref: '#/components/schemas/MenuDTO'
            '400':
             description: Bad Request
            '404':
             description: Not Found
    delete:
        tags:
            - menus
        summary: Supprime un menu
        operationId: deleteMenu
        parameters:
            - name: id
              in: path
              description: numéro du menu à supprimer
              required: true
              schema:
                  type: integer
                  format: int32
        responses:
            '204':
              description: OK
            '404':
              description: Not Found
  /menus/{id}/{dishType}:
    get:
      tags:
        - menus
      summary: Obtient le plat du type demandé
      operationId: getDishByType
      parameters:
        - name: id
          in: path
          description: numéro du menu
          required: true
          schema:
            type: integer
            format: int32
        - name: dishType
          in: path
          description: type de plat
          required: true
          schema:
            type: string
            enum:
              - starter
              - main
              - dessert
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DishDTO'
        '404':
          description: Not Found
      deprecated: false
    put:
        tags:
            - menus
        summary: Ajoute ou met à jour le plat du type demandé dans le menu
        operationId: putStarter
        parameters:
            - name: id
              in: path
              description: numéro du menu
              required: true
              schema:
                  type: integer
                  format: int32
        requestBody:
            content:
                'application/json':
                    schema:
                        $ref: '#/components/schemas/DishDTO'
        responses:
          '201':
            description: plat d'entrée crée
          '204':
                description: plat d'entrée mis à jour
    delete:
        tags:
            - menus
        summary: Supprime le plat du type demandé du menu
        operationId: deleteStarter
        parameters:
            - name: id
              in: path
              description: numéro du menu
              required: true
              schema:
                  type: integer
                  format: int32
        responses:
            '204':
              description: OK
            '404':
              description: Not Found

  /chefs:
    get:
      tags:
        - chefs
      summary: Obtient une liste de tous les chefs
      operationId: getChefs
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChefDTO'
        '404':
          description: Not Found
    post:
      tags:
        - chefs
      summary: Ajoute un nouveau chef
      operationId: putChef
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ChefDTO'
      responses:
        '201':
          description: Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ChefDTO'
        '400':
          description: Bad Request
  /chefs/{id}:
    get:
      tags:
        - chefs
      summary: Obtient un chef
      operationId: getChef
      parameters:
        - name: id
          in: path
          description: numéro du chef à obtenir
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ChefDTO'
        '404':
          description: Not Found
      deprecated: false
    put:
        tags:
            - chefs
        summary: Met à jour un chef
        operationId: updateChef
        parameters:
            - name: id
              in: path
              description: numéro du chef à mettre à jour
              required: true
              schema:
                  type: integer
                  format: int32
        requestBody:
          $ref: '#/components/requestBodies/ChefDTO'
        responses:
            '200':
              description: OK
              content:
                'application/json':
                  schema:
                    $ref: '#/components/schemas/ChefDTO'
            '400':
             description: Bad Request
            '404':
             description: Not Found
    delete:
        tags:
            - chefs
        summary: Supprime un chef
        operationId: deleteChef
        parameters:
            - name: id
              in: path
              description: numéro du chef à supprimer
              required: true
              schema:
                  type: integer
                  format: int32
        responses:
            '204':
              description: OK
            '404':
              description: Not Found
  /chefs/{id}/dishes:
    get:
      tags:
        - chefs
      summary: Obtient les plats d'un chef
      operationId: getChefDishes
      parameters:
        - name: id
          in: path
          description: numéro du chef
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DishDTO'
        '404':
          description: Not Found
      deprecated: false

  /dishes:
    get:
      tags:
        - dishes
      summary: Obtient une liste de tous les plats
      operationId: getDishes
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DishDTO'
        '404':
          description: Not Found
    post:
      tags:
        - dishes
      summary: Ajoute un nouveau plat
      operationId: addDish
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DishDTO'
      responses:
        '201':
          description: plat créé
          headers:
            Location:
              description: URL du plat créé
              schema:
                type: string
                format: uri
  /dishes/{id}:
    get:
      tags:
        - dishes
      summary: Obtient un plat
      operationId: getDish
      parameters:
        - name: id
          in: path
          description: numéro du plat à obtenir
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DishDTO'
        '404':
          description: Not Found
      deprecated: false
    put:
        tags:
            - dishes
        summary: Met à jour un plat
        operationId: updateDish
        parameters:
            - name: id
              in: path
              description: numéro du plat à mettre à jour
              required: true
              schema:
                  type: integer
                  format: int32
        requestBody:
          $ref: '#/components/requestBodies/DishDTO'
        responses:
            '200':
              description: OK
              content:
                'application/json':
                  schema:
                    $ref: '#/components/schemas/DishDTO'
            '400':
             description: Bad Request
            '404':
             description: Not Found
    delete:
        tags:
            - dishes
        summary: Supprime un plat
        operationId: deleteDish
        parameters:
            - name: id
              in: path
              description: numéro du plat à supprimer
              required: true
              schema:
                  type: integer
                  format: int32
        responses:
            '204':
              description: OK
            '404':
              description: Not Found

  /dishes/{id}/chefs:
    get:
      tags:
        - dishes
      summary: Obtient la liste des chefs qui ont préparé ce plat
      operationId: getChefsByDish
      parameters:
        - name: id
          in: path
          description: numéro du plat
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChefDTO'
        '404':
          description: Not Found
      deprecated: false
    put:
        tags:
            - dishes
        summary: Ajoute ou met à jour un chef qui a préparé ce plat
        operationId: putChefByDish
        parameters:
            - name: id
              in: path
              description: numéro du plat
              required: true
              schema:
                  type: integer
                  format: int32
        requestBody:
            content:
                'application/json':
                    schema:
                        $ref: '#/components/schemas/ChefDTO'
        responses:
          '201':
            description: chef créé
            headers:
              Location:
                description: URL du chef créé
                schema:
                  type: string
                  format: uri
          '204':
            description: chef mis à jour
    delete:
        tags:
            - dishes
        summary: Supprime un chef qui a préparé ce plat
        operationId: deleteChefByDish
        parameters:
            - name: id
              in: path
              description: numéro du plat
              required: true
              schema:
                  type: integer
                  format: int32
        responses:
            '204':
              description: OK
            '404':
              description: Not Found

components:
  schemas:
    DishDTO:
      title: DishDTO
      description: toutes les informations d'un plat
      type: object
      properties:
        id:
          description: numéro auto-incrémenté du plat
          type: integer
          format: int32
        name:
          description: nom du plat
          type: string
    DishWithRelationsDTO:
      title: DishDTO with relations
      description: toutes les informations d'un plat avec les chefs qui le préparent
      allOf:
        - $ref: '#/components/schemas/DishDTO'
        - type: object
          properties:
            chef:
              $ref: '#/components/schemas/ChefDTO'

    MenuDTO:
      title: MenuDTO
      description: toutes les caractéristiques d'un menu
      type: object
      properties:
        id:
          description: numéro auto-incrémenté du menu
          type: integer
          format: int32
        name:
          description: nom du menu
          type: string
    MenuDTOWithRelations:
      title: MenuDTO with relations
      description: toutes les caractéristiques d'un menu avec les plats qui le composent
      allOf:
        - $ref: '#/components/schemas/MenuDTO'
        - type: object
          properties:
            starter:
              $ref: '#/components/schemas/DishWithRelationsDTO'
            main:
              $ref: '#/components/schemas/DishWithRelationsDTO'
            dessert:
              $ref: '#/components/schemas/DishWithRelationsDTO'
    ChefDTO:
      title: ChefDTO
      description: toutes les caractéristiques d'un chef
      type: object
      properties:
        id:
          description: numéro auto-incrémenté du chef
          type: integer
          format: int32
        name:
          description: nom du chef
          type: string
    ChefWithRelationsDTO:
      title: ChefDTO with relations
      description: toutes les caractéristiques d'un chef avec les plats qu'il prépare
      allOf:
        - $ref: '#/components/schemas/ChefDTO'
        - type: object
      properties:
        dishes:
          type: array
          items:
            $ref: '#/components/schemas/DishDTO'
