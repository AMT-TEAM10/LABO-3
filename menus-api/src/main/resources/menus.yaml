openapi: '3.0.3'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
servers:
  - url: 'http://localhost:9090/api'
tags:
  - name: menus
    description: Gestion des menus
  - name: dishes
    description: Gestion des plats
  - name: chefs
    description: Gestion des chefs
paths:
  /menus:
    get:
      tags:
        - menus
      summary: Obtient une liste de tous les menus
      operationId: getMenus
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuDTO'
        '404':
          description: Not Found
    post:
      tags:
        - menus
      summary: Ajoute une nouvelle menu
      operationId: addMenu
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/MenuDTO'
      responses:
        '201':
          description: menu crée
          headers:
            Location:
              description: URL de la menu crée
              schema:
                type: string
                format: uri
  /menus/{id}:
    get:
      tags:
        - menus
      summary: Obtient une menu
      operationId: getMenu
      parameters:
        - name: id
          in: path
          description: numéro de la menu à obtenir
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MenuDTO'
        '404':
          description: Not Found
      deprecated: false

  /chefs:
    get:
      tags:
        - chefs
      summary: Obtient une liste de tous les chefs
      operationId: getChefs
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChefDTO'
        '404':
          description: Not Found
    post:
      tags:
        - menus
      summary: Ajoute un nouveau chef
      operationId: addChef
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ChefDTO'
      responses:
        '201':
          description: chef créé
          headers:
            Location:
              description: URL du chef créé
              schema:
                type: string
                format: uri
  /chefs/{id}:
    get:
      tags:
        - chefs
      summary: Obtient un chef
      operationId: getChef
      parameters:
        - name: id
          in: path
          description: numéro du chef à obtenir
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ChefDTO'
        '404':
          description: Not Found
      deprecated: false

  /dishes:
    get:
      tags:
        - dishes
      summary: Obtient une liste de tous les plats
      operationId: getDishes
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DishDTO'
        '404':
          description: Not Found
    post:
      tags:
        - dishes
      summary: Ajoute un nouveau plat
      operationId: addDish
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DishDTO'
      responses:
        '201':
          description: plat créé
          headers:
            Location:
              description: URL du plat créé
              schema:
                type: string
                format: uri
  /dishes/{id}:
    get:
      tags:
        - dishes
      summary: Obtient un plat
      operationId: getDish
      parameters:
        - name: id
          in: path
          description: numéro du plat à obtenir
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DishDTO'
        '404':
          description: Not Found
      deprecated: false

components:
  schemas:
    DishDTO:
      title: Dish
      description: toutes les informations d'un plat
      type: object
      properties:
        id:
          description: numéro auto-incrémenté du plat
          type: integer
          format: int32
        name:
          description: nom du plat
          type: string
        chefs:
          description: liste des chefs qui ont préparé ce plat
          type: array
          items:
            $ref: '#/components/schemas/ChefDTO'
    MenuDTO:
      title: Menu
      description: toutes les caractéristiques d'un menu
      type: object
      properties:
        id:
          description: numéro auto-incrémenté du menu
          type: integer
          format: int32
        name:
          description: nom du menu
          type: string
        starter:
          $ref: '#/components/schemas/DishDTO'
        main:
          $ref: '#/components/schemas/DishDTO'
        dessert:
          $ref: '#/components/schemas/DishDTO'
    ChefDTO:
      title: Chef
      description: toutes les caractéristiques d'un chef
      type: object
      properties:
        id:
          description: numéro auto-incrémenté du chef
          type: integer
          format: int32
        name:
          description: nom du chef
          type: string
